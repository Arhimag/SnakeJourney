package com.arhimag.games.omnomnom.Screens;

import java.util.List;

import android.graphics.Rect;

import com.arhimag.games.omnomnom.Assets;
import com.arhimag.games.omnomnom.GameLevelDrawer;
import com.arhimag.games.omnomnom.Settings;
import com.arhimag.games.omnomnom.Levels.Level1;
import com.arhimag.games.omnomnom.Levels.Level2;
import com.arhimag.games.omnomnom.Levels.Level3;
import com.arhimag.games.omnomnom.Maps.Level1Map;
import com.arhimag.games.omnomnom.Maps.Level2Map;
import com.arhimag.games.omnomnom.Maps.Level3Map;
import com.arhimag.games.omnomnom.Maps.MainMenuMap;
import com.arhimag.games.omnomnom.framework.Game;
import com.arhimag.games.omnomnom.framework.Graphics;
import com.arhimag.games.omnomnom.framework.Input.TouchEvent;
import com.arhimag.games.omnomnom.framework.Screen;
import com.arhimag.games.omnomnom.framework.impl.AndroidGame;


public class GameScreen extends Screen
{
	GameLevelDrawer levelDrawer;

	int level = 1;
	
	public GameScreen(Game game)
	{
		super(game);
		AndroidGame andrGame = (AndroidGame) game;


		levelDrawer = new GameLevelDrawer( new Level1( new Level1Map()), andrGame.getDisplayWidth() , andrGame.getDisplayHeight(), game.getGraphics());
	}

	@Override
	public void update(float deltaTime)
	{
		Graphics g = game.getGraphics();
		List<TouchEvent> touchEvents = game.getInput().getTouchEvents();
		game.getInput().getKeyEvents();
		
		int len = touchEvents.size();
		
		if( game.getInput().getAccelY() < -2.5f )
			this.levelDrawer.getLevel().goLEFT();
		else if( game.getInput().getAccelY() > 2.5f )
			this.levelDrawer.getLevel().goRIGHT();
		
		if( game.getInput().getAccelX() < -2.5f )
			this.levelDrawer.getLevel().goUP();
		else if( game.getInput().getAccelX() > 2.5f )
			this.levelDrawer.getLevel().goDOWN();
		
		this.levelDrawer.getLevel().update(deltaTime);
		
			
		if( this.levelDrawer.getLevel().nextLevel() )
			if( level == 2)
			{
				level = 2;
				this.levelDrawer.setLevel(new Level2(new Level2Map()));
			}
			else if (level == 1)
			{
				level = 3;
				this.levelDrawer.setLevel(new Level3(new Level3Map()));
			}
			else
				game.setScreen(new MainMenuScreen(game));
			
		if( this.levelDrawer.getLevel().getEat() )
			Assets.eat.play(1);
		
		for(int i = 0; i < len; i++)
		{
			TouchEvent event = touchEvents.get(i);
		
			if(event.type == TouchEvent.TOUCH_UP)
			{
				if( event.x > ((AndroidGame)this.game).getDisplayWidth()/2 )
					this.levelDrawer.getLevel().turnRight();
				else
					this.levelDrawer.getLevel().turnLeft();
			}
		}
		
	}

	@Override
	public void present(float deltaTime)
	{
		Graphics g = game.getGraphics();
		g.clear(0);
		levelDrawer.draw(deltaTime);
	}

	@Override
	public void pause()
	{
		Settings.save(game.getFileIO());
	}

	@Override
	public void resume()
	{
		// TODO Auto-generated method stub

	}

	@Override
	public void dispose()
	{
		// TODO Auto-generated method stub

	}

}
