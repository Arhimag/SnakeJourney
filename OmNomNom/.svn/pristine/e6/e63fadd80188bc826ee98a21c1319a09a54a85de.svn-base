package com.arhimag.games.omnomnom.Screens;

import java.util.List;

import android.graphics.Rect;

import com.arhimag.games.omnomnom.Assets;
import com.arhimag.games.omnomnom.GameLevelDrawer;
import com.arhimag.games.omnomnom.Settings;
import com.arhimag.games.omnomnom.Levels.Level1;
import com.arhimag.games.omnomnom.Levels.Level2;
import com.arhimag.games.omnomnom.Levels.Level3;
import com.arhimag.games.omnomnom.Levels.Level4;
import com.arhimag.games.omnomnom.Maps.Level1Map;
import com.arhimag.games.omnomnom.Maps.Level2Map;
import com.arhimag.games.omnomnom.Maps.Level3Map;
import com.arhimag.games.omnomnom.Maps.Level4Map;
import com.arhimag.games.omnomnom.Maps.MainMenuMap;
import com.arhimag.games.omnomnom.framework.Game;
import com.arhimag.games.omnomnom.framework.Graphics;
import com.arhimag.games.omnomnom.framework.Input.KeyEvent;
import com.arhimag.games.omnomnom.framework.Input.TouchEvent;
import com.arhimag.games.omnomnom.framework.Point;
import com.arhimag.games.omnomnom.framework.Screen;
import com.arhimag.games.omnomnom.framework.impl.AndroidGame;


public class GameScreen extends Screen
{
	GameLevelDrawer levelDrawer;

	Point old[];
	int level = 1;
	int controltype = 0;
	
	public GameScreen(Game game)
	{
		super(game);
		AndroidGame andrGame = (AndroidGame) game;

		old = new Point[10];
		for(int i  = 0; i < 10 ; i++) old[i] = new Point();
		controltype = 0;
		levelDrawer = new GameLevelDrawer( new Level1( new Level1Map()), andrGame.getDisplayWidth() , andrGame.getDisplayHeight(), game.getGraphics());
	}

	@Override
	public void update(float deltaTime)
	{
		Graphics g = game.getGraphics();
		List<TouchEvent> touchEvents = game.getInput().getTouchEvents();
		List<KeyEvent> keyEvents = game.getInput().getKeyEvents();
		
		int len = keyEvents.size();
		
		for(int i = 0; i < len; i++)
		{
			KeyEvent event = keyEvents.get(i);
			if ( event.type == KeyEvent.KEY_UP )
				if( event.keyCode == android.view.KeyEvent.KEYCODE_SEARCH )
					controltype = ( controltype + 1 ) % 5;
		}
		
		len = touchEvents.size();
		
		if( controltype == 1 )
		{
			if( game.getInput().getAccelY() < -2.5f )
				this.levelDrawer.getLevel().goLEFT();
			else if( game.getInput().getAccelY() > 2.5f )
				this.levelDrawer.getLevel().goRIGHT();
		
			if( game.getInput().getAccelX() < -2.5f )
				this.levelDrawer.getLevel().goUP();
			else if( game.getInput().getAccelX() > 2.5f )
				this.levelDrawer.getLevel().goDOWN();
		}
		
		this.levelDrawer.getLevel().update(deltaTime);
		
			
		if( this.levelDrawer.getLevel().nextLevel() )
			if( level == 1)
			{
				level = 2;
				this.levelDrawer.setLevel(new Level2(new Level2Map()));
			}
			else if (level == 2)
			{
				level = 3;
				this.levelDrawer.setLevel(new Level3(new Level3Map()));
			}
			else if (level == 3)
			{
				level = 4;
				this.levelDrawer.setLevel(new Level4(new Level4Map()));
			}
			else
				game.setScreen(new MainMenuScreen(game));
			
		if( this.levelDrawer.getLevel().getEat() )
			Assets.eat.play(1);
		
		for(int i = 0; i < len; i++)
		{
			TouchEvent event = touchEvents.get(i);
		
			if( controltype == 0)
			{
				if(event.type == TouchEvent.TOUCH_UP)
				{
					if( java.lang.Math.abs(event.x - old[event.pointer].x) > java.lang.Math.abs(event.y - old[event.pointer].y) )
					{
						if( event.x - old[event.pointer].x < 0 )
							this.levelDrawer.getLevel().goLEFT();
						else
							this.levelDrawer.getLevel().goRIGHT();
					}
					else
					{
						if( event.y - old[event.pointer].y < 0 )
							this.levelDrawer.getLevel().goUP();
						else
							this.levelDrawer.getLevel().goDOWN();
					}
					old[event.pointer].x = -1;
					old[event.pointer].y = -1;
				}
				else if( event.type == TouchEvent.TOUCH_DOWN )
				{
					old[event.pointer].x = event.x;
					old[event.pointer].y = event.y;
				}
			}
			else if( controltype == 2)
			{
				if(event.type == TouchEvent.TOUCH_UP)
				{
					if( event.x > ((AndroidGame)game).getDisplayWidth() / 2 )
						levelDrawer.getLevel().turnRight();
					else
						levelDrawer.getLevel().turnLeft();
				}
			}
			else if( controltype == 3)
			{
				if( event.type == TouchEvent.TOUCH_UP )
				{
					if( event.x < ((AndroidGame)game).getDisplayWidth() / 3 )
						levelDrawer.getLevel().goLEFT();
					else if( event.x > 2 *((AndroidGame)game).getDisplayWidth() / 3 )
						levelDrawer.getLevel().goRIGHT();
					else if( event.y > ((AndroidGame)game).getDisplayHeight() /2 )
						levelDrawer.getLevel().goDOWN();
					else 
						levelDrawer.getLevel().goUP();
				}
					
			}
			else if( controltype == 4)
			{
				if( event.type == TouchEvent.TOUCH_UP )
				{
					if( event.y < ((AndroidGame)game).getDisplayHeight() / 3 )
						levelDrawer.getLevel().goUP();
					else if( event.y > 2 *((AndroidGame)game).getDisplayHeight() / 3 )
						levelDrawer.getLevel().goDOWN();
					else if( event.x > ((AndroidGame)game).getDisplayWidth() /2 )
						levelDrawer.getLevel().goRIGHT();
					else 
						levelDrawer.getLevel().goLEFT();
				}
	
			}
		}
		
	}

	@Override
	public void present(float deltaTime)
	{
		Graphics g = game.getGraphics();
		g.clear(0);
		levelDrawer.draw(deltaTime);
	}

	@Override
	public void pause()
	{
		Settings.save(game.getFileIO());
	}

	@Override
	public void resume()
	{
		// TODO Auto-generated method stub

	}

	@Override
	public void dispose()
	{
		// TODO Auto-generated method stub

	}

}
