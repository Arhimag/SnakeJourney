package com.arhimag.games.omnomnom.Levels;

import com.arhimag.games.omnomnom.Snake;
import com.arhimag.games.omnomnom.Maps.GameMap;

public class PauseMenuLevel extends GameLevel
{
	
	private GameLevel tempLevel;
	private int tempLevelNum;
	
	public PauseMenuLevel(  GameMap map )
	{
		super(map);
		playerSnake = -1;
		snakes = new Snake[0];
		moved = new boolean[0];
		pauseable = false;
		/*snakes[0] = new Deykstra2AISnake(this,snakeStartX, snakeStartY);
		snakes[0].parts.add(new SnakePart(snakeStartX - 1, snakeStartY));
		snakes[0].parts.add(new SnakePart(snakeStartX - 2, snakeStartY));
		snakes[0].lastx = snakeStartX - 3;
		snakes[0].lasty = snakeStartY;
		snakes[0].direction = Snake.RIGHT;
		snakes[0].finishSize = 10000; */
		
		/*snakes[1] = new Deykstra2AISnake(this,this.map.getMapWidth() - snakeStartX - 4 - 1, snakeStartY);
		snakes[1].parts.add(new SnakePart(this.map.getMapWidth() - snakeStartX - 3 - 1, snakeStartY));
		snakes[1].parts.add(new SnakePart(this.map.getMapWidth() - snakeStartX - 2 - 1, snakeStartY));
		snakes[1].lastx = this.map.getMapWidth() - snakeStartX - 1 - 1;
		snakes[1].lasty = snakeStartY;
		snakes[1].direction = Snake.LEFT;
		snakes[1].finishSize = 10000; */
		/*
		food = new Food[5];
		food[0] = new Food( snakeStartX + 3, snakeStartY);
		food[1] = new Food( snakeStartX + 4, snakeStartY);
		food[2] = new Food( snakeStartX + 5, snakeStartY);
		food[3] = new Food( snakeStartX + 6, snakeStartY);
		food[4] = new Food( snakeStartX + 7, snakeStartY); */		
		aqua = false;
		readyScreen = false;
	}
	
	
	public PauseMenuLevel(  GameMap map, GameLevel tmpLevel, int tmpLevelNum )
	{
		super(map);
		tempLevel = tmpLevel;
		tempLevelNum = tmpLevelNum;
		
	//	int snakeStartX = 4;
		//int snakeStartY = 1;

		pauseable = false;
		playerSnake = -1;
		snakes = new Snake[0];
		moved = new boolean[0];
		/*snakes[0] = new Deykstra2AISnake(this,snakeStartX, snakeStartY);
		snakes[0].parts.add(new SnakePart(snakeStartX - 1, snakeStartY));
		snakes[0].parts.add(new SnakePart(snakeStartX - 2, snakeStartY));
		snakes[0].lastx = snakeStartX - 3;
		snakes[0].lasty = snakeStartY;
		snakes[0].direction = Snake.RIGHT;
		snakes[0].finishSize = 10000;
*/		
		/*snakes[1] = new Deykstra2AISnake(this,this.map.getMapWidth() - snakeStartX - 4 - 1, snakeStartY);
		snakes[1].parts.add(new SnakePart(this.map.getMapWidth() - snakeStartX - 3 - 1, snakeStartY));
		snakes[1].parts.add(new SnakePart(this.map.getMapWidth() - snakeStartX - 2 - 1, snakeStartY));
		snakes[1].lastx = this.map.getMapWidth() - snakeStartX - 1 - 1;
		snakes[1].lasty = snakeStartY;
		snakes[1].direction = Snake.LEFT;
		snakes[1].finishSize = 10000; */
		/*
		food = new Food[5];
		food[0] = new Food( snakeStartX + 3, snakeStartY);
		food[1] = new Food( snakeStartX + 4, snakeStartY);
		food[2] = new Food( snakeStartX + 5, snakeStartY);
		food[3] = new Food( snakeStartX + 6, snakeStartY);
		food[4] = new Food( snakeStartX + 7, snakeStartY);*/		
		aqua = false;
		readyScreen = false;
	}

	
	public void update(float deltaTime, int snake_id )
	{/*
		if(!botMoved)
		{
			((Deykstra2AISnake)snakes[0]).nextTurn();
			//((Deykstra2AISnake)snakes[1]).nextTurn();
			botMoved = true;
		} */
		super.update(deltaTime, snake_id);
	}
	
	public GameLevel getTempLevel()
	{
		return tempLevel;
	}
	
	public int getTempLevelNum()
	{
		return tempLevelNum;
	}
	
}
